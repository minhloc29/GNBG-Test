2025-06-24 14:01:09 INFO --- GNBG Problem Parameters for f16 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0 0 0 0 0 0 0 0 0 0]
----------------------------------------
2025-06-24 14:01:09 INFO --- GNBG Problem Parameters for f16 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0 0 0 0 0 0 0 0 0 0]
----------------------------------------
2025-06-24 14:01:09 INFO --- GNBG Problem Parameters for f16 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0 0 0 0 0 0 0 0 0 0]
----------------------------------------
2025-06-24 14:01:09 INFO --- GNBG Problem Parameters for f16 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0 0 0 0 0 0 0 0 0 0]
----------------------------------------
2025-06-24 14:01:50 INFO Run function 16 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:01:50 INFO FeHistory: [172852.87188388 192634.92287252 175177.49355909 ...  -4470.4
  -4470.4         -4470.4       ]
2025-06-24 14:01:50 INFO Expected Optimum FE: -5000
2025-06-24 14:01:50 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 14:01:51 INFO Run function 16 complete. FEHistory len: 150000, AOCC: 0.5610
2025-06-24 14:01:51 INFO FeHistory: [140753.62940847 115059.53693512 118247.95343413 ...  -5000.
  -5000.          -5000.        ]
2025-06-24 14:01:51 INFO Expected Optimum FE: -5000
2025-06-24 14:01:51 INFO Good algorithm:
Algorithm Name: EnhancedArchiveGuidedDE
import numpy as np
import random

class EnhancedArchiveGuidedDE: #aocc 0.15
    def __init__(self, budget: int, dim: int, lower_bounds: list[float], upper_bounds: list[float],
                 population_size_factor: float = 8.82865217019506, archive_size: int = 165.22481375900153, initial_F_scale: float = 0.3544373580018585):
        self.budget = int(budget)
        self.dim = int(dim)
        self.lower_bounds = np.array(lower_bounds, dtype=float)
        self.upper_bounds = np.array(upper_bounds, dtype=float)

        self.eval_count = 0
        self.best_solution_overall = None
        self.best_fitness_overall = float('inf')

        self.population_size = int(population_size_factor * self.dim)  # common heuristic
        self.archive_size = archive_size
        self.archive = []
        self.population = None
        self.F_scale = initial_F_scale  # initial scaling factor

    def optimize(self, objective_function: callable, acceptance_threshold: float = 1e-8,
                 F_scale_variation: float = 0.3, archive_update_threshold: float = 0.8) -> tuple:
        self.eval_count = 0
        self.population = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size, self.dim))
        fitness = objective_function(self.population)
        self.eval_count += self.population_size

        self.best_solution_overall = self.population[np.argmin(fitness)]
        self.best_fitness_overall = np.min(fitness)

        while self.eval_count < self.budget:
            offspring = self.generate_offspring(self.population, fitness, F_scale_variation)
            offspring_fitness = objective_function(offspring)
            self.eval_count += len(offspring)

            # Update archive
            self.update_archive(offspring, offspring_fitness, archive_update_threshold)

            # Select best solutions for next generation
            combined_population = np.concatenate((self.population, offspring))
            combined_fitness = np.concatenate((fitness, offspring_fitness))
            indices = np.argsort(combined_fitness)
            self.population = combined_population[indices[:self.population_size]]
            fitness = combined_fitness[indices[:self.population_size]]

            # Update best solution
            self.best_solution_overall = self.population[np.argmin(fitness)]
            self.best_fitness_overall = np.min(fitness)

        optimization_info = {
            'function_evaluations_used': self.eval_count,
            'final_best_fitness': self.best_fitness_overall,
            'archive_size': len(self.archive)
        }
        return self.best_solution_overall, self.best_fitness_overall, optimization_info

    def generate_offspring(self, population, fitness, F_scale_variation):
        offspring = np.zeros((self.population_size, self.dim))
        # Adaptive scaling factor
        self.F_scale = 0.5 + F_scale_variation * np.random.rand()  # scale factor with slight variation

        for i in range(self.population_size):
            # Select pbest from archive (if available)
            if self.archive:
                pbest_index = np.random.choice(len(self.archive))
                pbest = self.archive[pbest_index][0]
            else:
                pbest = population[np.argmin(fitness)]

            a, b, c = random.sample(range(self.population_size), 3)
            while a == i or b == i or c == i:
                a, b, c = random.sample(range(self.population_size), 3)

            offspring[i] = population[i] + self.F_scale * (pbest - population[i] + population[a] - population[b])
            offspring[i] = np.clip(offspring[i], self.lower_bounds, self.upper_bounds)  # Boundary handling

        return offspring

    def update_archive(self, offspring, offspring_fitness, archive_update_threshold):
        for i in range(len(offspring)):
            if len(self.archive) < self.archive_size:
                self.archive.append((offspring[i], offspring_fitness[i]))
            else:
                # Prioritize diversity in archive
                worst_index = np.argmax([f for _, f in self.archive])
                if offspring_fitness[i] < self.archive[worst_index][1] or len(self.archive) < self.archive_size * archive_update_threshold:
                    self.archive[worst_index] = (offspring[i], offspring_fitness[i])
2025-06-24 14:01:51 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 14:01:52 INFO Run function 16 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:01:52 INFO FeHistory: [121362.14180448 141245.13953481 143510.07260331 ...  -2160.99867028
   -489.27275161  -1242.78783077]
2025-06-24 14:01:52 INFO Expected Optimum FE: -5000
2025-06-24 14:01:52 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 14:02:31 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:02:31 INFO FeHistory: [165945.52327628 149534.5557575  140288.39123417 ...  -4317.87596894
  -4317.87596894  -4317.87596894]
2025-06-24 14:02:31 INFO Expected Optimum FE: -5000
2025-06-24 14:02:31 INFO --- GNBG Problem Parameters for f19 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
----------------------------------------
2025-06-24 14:02:33 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:02:33 INFO FeHistory: [122989.9037587  169643.91482112 155443.88291157 ... 203493.4134205
 155766.9116345  159577.02909986]
2025-06-24 14:02:33 INFO Expected Optimum FE: -5000
2025-06-24 14:02:33 INFO --- GNBG Problem Parameters for f19 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
----------------------------------------
2025-06-24 14:02:33 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:02:33 INFO FeHistory: [165334.2138775  163879.86905879  99257.89913464 ...  -4470.4
  -4470.4         -4470.4       ]
2025-06-24 14:02:33 INFO Expected Optimum FE: -5000
2025-06-24 14:02:33 INFO --- GNBG Problem Parameters for f19 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
----------------------------------------
2025-06-24 14:03:14 INFO Run function 19 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:03:14 INFO FeHistory: [157929.87082742 126859.37296124 169550.3111351  ...  -4467.7875808
  -4467.7875808   -4467.7875808 ]
2025-06-24 14:03:14 INFO Expected Optimum FE: -5000
2025-06-24 14:03:14 INFO Unimodal AOCC mean: nan
2025-06-24 14:03:14 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 14:03:14 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 14:03:14 INFO AOCC mean: 0.0000
2025-06-24 14:03:14 INFO Weighed AOCC mean: nan
2025-06-24 14:03:16 INFO Run function 19 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:03:16 INFO FeHistory: [168822.3356591  129959.64656989 126312.41605774 ...  13957.55794178
   7453.62850236  20407.90021796]
2025-06-24 14:03:16 INFO Expected Optimum FE: -5000
2025-06-24 14:03:16 INFO Unimodal AOCC mean: nan
2025-06-24 14:03:16 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 14:03:16 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 14:03:16 INFO AOCC mean: 0.0000
2025-06-24 14:03:16 INFO Weighed AOCC mean: nan
2025-06-24 14:03:18 INFO Run function 19 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:03:18 INFO FeHistory: [151341.01539946 168143.7881719  128482.55631583 ...  -4419.89597799
  -4419.89387097  -4419.89052553]
2025-06-24 14:03:18 INFO Expected Optimum FE: -5000
2025-06-24 14:03:18 INFO Unimodal AOCC mean: nan
2025-06-24 14:03:18 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 14:03:18 INFO Multimodal (multiple components) AOCC mean: 0.1870
2025-06-24 14:03:18 INFO AOCC mean: 0.1870
2025-06-24 14:03:18 INFO Weighed AOCC mean: nan
2025-06-24 14:03:30 INFO Run function 16 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:03:30 INFO FeHistory: [137943.6751457  148051.60022904 236992.42687168 ...  -4470.4
  -4470.4         -4470.4       ]
2025-06-24 14:03:30 INFO Expected Optimum FE: -5000
2025-06-24 14:03:30 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 14:05:42 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:05:42 INFO FeHistory: [115510.99102972 201882.05710373 205840.31597643 ...  -4317.9
  -4317.9         -4317.9       ]
2025-06-24 14:05:42 INFO Expected Optimum FE: -5000
2025-06-24 14:05:42 INFO --- GNBG Problem Parameters for f19 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
----------------------------------------
2025-06-24 14:07:52 INFO Run function 19 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 14:07:52 INFO FeHistory: [ 85263.87352557 213518.92244346 284907.83842926 ...  -4419.9
  -4419.9         -4419.9       ]
2025-06-24 14:07:52 INFO Expected Optimum FE: -5000
2025-06-24 14:07:52 INFO Unimodal AOCC mean: nan
2025-06-24 14:07:52 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 14:07:52 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 14:07:52 INFO AOCC mean: 0.0000
2025-06-24 14:07:52 INFO Weighed AOCC mean: nan
