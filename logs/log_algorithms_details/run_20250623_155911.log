2025-06-23 15:59:11 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:12 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:12 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:12 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:12 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:53 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0251
2025-06-23 15:59:53 INFO FeHistory: [186.52800535 206.41276145 199.46492596 ... -47.47980124 -47.47980124
 -47.47980124]
2025-06-23 15:59:53 INFO Expected Optimum FE: -100
2025-06-23 15:59:53 INFO Unimodal AOCC mean: nan
2025-06-23 15:59:53 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 15:59:53 INFO Multimodal (multiple components) AOCC mean: 0.0251
2025-06-23 15:59:53 INFO AOCC mean: 0.0251
2025-06-23 15:59:54 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:55 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0336
2025-06-23 15:59:55 INFO FeHistory: [220.86978844 163.21160002 191.69832711 ... -57.23166583 -57.23166583
 -57.23166583]
2025-06-23 15:59:55 INFO Expected Optimum FE: -100
2025-06-23 15:59:55 INFO Unimodal AOCC mean: nan
2025-06-23 15:59:55 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 15:59:55 INFO Multimodal (multiple components) AOCC mean: 0.0336
2025-06-23 15:59:55 INFO AOCC mean: 0.0336
2025-06-23 15:59:55 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:56 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-23 15:59:56 INFO FeHistory: [178.24818897 176.98432607 171.26293727 ...  36.65590267  36.65590267
  36.65587094]
2025-06-23 15:59:56 INFO Expected Optimum FE: -100
2025-06-23 15:59:56 INFO Unimodal AOCC mean: nan
2025-06-23 15:59:56 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 15:59:56 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-23 15:59:56 INFO AOCC mean: 0.0000
2025-06-23 15:59:56 INFO --- GNBG Problem Parameters for f24 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -100.000000
  Lambda (Curvature): [0.25 0.25 0.25 0.25 0.25]
  Mu (Asymmetry/Depth): [0.44142637 0.27898903 0.25803028 0.21978833 0.39183826 0.42051979
 0.35740109 0.43165341 0.47744239 0.47234476]
----------------------------------------
2025-06-23 15:59:57 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0515
2025-06-23 15:59:57 INFO FeHistory: [210.00489099 208.99343765 151.96337322 ... -76.69554763 -76.77272056
 -76.77272243]
2025-06-23 15:59:57 INFO Expected Optimum FE: -100
2025-06-23 15:59:57 INFO Unimodal AOCC mean: nan
2025-06-23 15:59:57 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 15:59:57 INFO Multimodal (multiple components) AOCC mean: 0.0515
2025-06-23 15:59:57 INFO AOCC mean: 0.0515
2025-06-23 16:00:32 ERROR Can not run the algorithm
2025-06-23 16:00:32 INFO Run function 24 complete. FEHistory len: 149381, AOCC: 0.0000
2025-06-23 16:00:32 INFO FeHistory: [202.94129833 200.46860193 202.94129833 ... 147.37489981 166.43515449
 147.37489981]
2025-06-23 16:00:32 INFO Expected Optimum FE: -100
2025-06-23 16:00:32 INFO Unimodal AOCC mean: nan
2025-06-23 16:00:32 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 16:00:32 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-23 16:00:32 INFO AOCC mean: 0.0000
2025-06-23 16:00:33 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.1099
2025-06-23 16:00:33 INFO FeHistory: [192.30983546 172.75866009 170.57885249 ... -98.73565569 -98.72429249
 -98.74625583]
2025-06-23 16:00:33 INFO Expected Optimum FE: -100
2025-06-23 16:00:33 INFO Good algorithm:
Algorithm Name: EnhancedArchiveGuidedDE
import numpy as np
import random
class EnhancedArchiveGuidedDE:
    def __init__(self, budget: int, dim: int, lower_bounds: list[float], upper_bounds: list[float]):
        self.budget = int(budget)
        self.dim = int(dim)
        self.lower_bounds = np.array(lower_bounds, dtype=float)
        self.upper_bounds = np.array(upper_bounds, dtype=float)

        self.eval_count = 0
        self.best_solution_overall = None
        self.best_fitness_overall = float('inf')

        self.population_size = 10 * self.dim  # common heuristic
        self.archive_size = 100
        self.archive = []
        self.population = None
        self.F_scale = 0.5 #initial scaling factor


    def optimize(self, objective_function: callable, acceptance_threshold: float = 1e-8) -> tuple:
        self.eval_count = 0
        self.population = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size, self.dim))
        fitness = objective_function(self.population)
        self.eval_count += self.population_size

        self.best_solution_overall = self.population[np.argmin(fitness)]
        self.best_fitness_overall = np.min(fitness)

        while self.eval_count < self.budget:
            offspring = self.generate_offspring(self.population, fitness)
            offspring_fitness = objective_function(offspring)
            self.eval_count += len(offspring)

            # Update archive
            self.update_archive(offspring, offspring_fitness)

            # Select best solutions for next generation
            combined_population = np.concatenate((self.population, offspring))
            combined_fitness = np.concatenate((fitness, offspring_fitness))
            indices = np.argsort(combined_fitness)
            self.population = combined_population[indices[:self.population_size]]
            fitness = combined_fitness[indices[:self.population_size]]

            #Update best solution
            self.best_solution_overall = self.population[np.argmin(fitness)]
            self.best_fitness_overall = np.min(fitness)


        optimization_info = {
            'function_evaluations_used': self.eval_count,
            'final_best_fitness': self.best_fitness_overall,
            'archive_size': len(self.archive)
        }
        return self.best_solution_overall, self.best_fitness_overall, optimization_info

    def generate_offspring(self, population, fitness):
        offspring = np.zeros((self.population_size, self.dim))
        #Adaptive scaling factor
        self.F_scale = 0.5 + 0.3*np.random.rand() #scale factor with slight variation

        for i in range(self.population_size):
            # Select pbest from archive (if available)
            if self.archive:
                pbest_index = np.random.choice(len(self.archive))
                pbest = self.archive[pbest_index][0]
            else:
                pbest = population[np.argmin(fitness)]

            a, b, c = random.sample(range(self.population_size), 3)
            while a == i or b == i or c == i:
                a, b, c = random.sample(range(self.population_size), 3)

            offspring[i] = population[i] + self.F_scale * (pbest - population[i] + population[a] - population[b])
            offspring[i] = np.clip(offspring[i], self.lower_bounds, self.upper_bounds) #Boundary handling

        return offspring

    def update_archive(self, offspring, offspring_fitness):
        for i in range(len(offspring)):
            if len(self.archive) < self.archive_size:
                self.archive.append((offspring[i], offspring_fitness[i]))
            else:
                #Prioritize diversity in archive
                worst_index = np.argmax([f for _, f in self.archive])
                if offspring_fitness[i] < self.archive[worst_index][1] or len(self.archive) < self.archive_size * 0.8 :
                    self.archive[worst_index] = (offspring[i], offspring_fitness[i])
2025-06-23 16:00:33 INFO Unimodal AOCC mean: nan
2025-06-23 16:00:33 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 16:00:33 INFO Multimodal (multiple components) AOCC mean: 0.1099
2025-06-23 16:00:33 INFO AOCC mean: 0.1099
2025-06-23 16:01:25 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0539
2025-06-23 16:01:25 INFO FeHistory: [183.31344145 249.40813459 230.4664127  ... -73.58513748 -73.58513748
 -73.58513748]
2025-06-23 16:01:25 INFO Expected Optimum FE: -100
2025-06-23 16:01:25 INFO Unimodal AOCC mean: nan
2025-06-23 16:01:25 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 16:01:25 INFO Multimodal (multiple components) AOCC mean: 0.0539
2025-06-23 16:01:25 INFO AOCC mean: 0.0539
2025-06-23 16:03:38 INFO Run function 24 complete. FEHistory len: 150000, AOCC: 0.0447
2025-06-23 16:03:38 INFO FeHistory: [174.61761825 215.08254251 216.64359894 ... -67.97842268 -67.97842268
 -67.97842268]
2025-06-23 16:03:38 INFO Expected Optimum FE: -100
2025-06-23 16:03:38 INFO Unimodal AOCC mean: nan
2025-06-23 16:03:38 INFO Multimodal (single component) AOCC mean: nan
2025-06-23 16:03:38 INFO Multimodal (multiple components) AOCC mean: 0.0447
2025-06-23 16:03:38 INFO AOCC mean: 0.0447
