2025-06-24 09:11:08 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:11:08 ERROR Can not run the algorithm
2025-06-24 09:11:08 INFO Run function 18 complete. FEHistory len: 0, AOCC: 0.0000
2025-06-24 09:11:08 INFO FeHistory: []
2025-06-24 09:11:08 INFO Expected Optimum FE: -5000
2025-06-24 09:11:08 INFO Unimodal AOCC mean: nan
2025-06-24 09:11:08 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:11:08 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:11:08 INFO AOCC mean: 0.0000
2025-06-24 09:11:08 INFO Weighed AOCC mean: nan
2025-06-24 09:12:16 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:13:13 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:13:13 INFO FeHistory: [152431.15804359 136587.54208212 153401.0922467  ...   6148.88277925
   6148.88277925   6148.88277925]
2025-06-24 09:13:13 INFO Expected Optimum FE: -5000
2025-06-24 09:13:13 INFO Unimodal AOCC mean: nan
2025-06-24 09:13:13 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:13:13 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:13:13 INFO AOCC mean: 0.0000
2025-06-24 09:13:13 INFO Weighed AOCC mean: nan
2025-06-24 09:15:44 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:15:58 ERROR Can not run the algorithm
2025-06-24 09:15:58 INFO Run function 18 complete. FEHistory len: 56402, AOCC: 0.0000
2025-06-24 09:15:58 INFO FeHistory: [131481.02053284 179546.95095449 150295.19817761 ...  -2665.0968444
  -2665.38648299  -2665.21352094]
2025-06-24 09:15:58 INFO Expected Optimum FE: -5000
2025-06-24 09:15:58 INFO Unimodal AOCC mean: nan
2025-06-24 09:15:58 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:15:58 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:15:58 INFO AOCC mean: 0.0000
2025-06-24 09:15:58 INFO Weighed AOCC mean: nan
2025-06-24 09:17:56 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:17:56 ERROR Can not run the algorithm
2025-06-24 09:17:56 INFO Run function 18 complete. FEHistory len: 100, AOCC: 0.0000
2025-06-24 09:17:56 INFO FeHistory: [ 91400.74055238 132019.88523923  81412.57186114  85014.87910864
 168572.59416354 168989.21447618 138135.65806638 143245.09928267
 105097.8643141   97920.51411024 106122.11877529 129135.49590533
 201122.14576493 131593.11681009 146788.08501494 141211.73343833
 157869.48213814 197501.93050617 156185.94004626 170062.96204586
 154333.21281453 140600.01920208 193519.94797886 149669.26275068
  95299.95454285 117903.47702293 190168.08798244 161876.77915663
 209702.50253019 165560.07190884 136561.82556847 162867.1873541
 185557.09360747 173017.2580416  161642.40528092 157781.40405077
 213549.84814543 194939.08304248 113589.12994822 191048.53743723
 178852.39941593 167607.86559897 171896.10427299  86336.77927139
 141694.9811786  179376.81060928  84101.02668291 158325.10620278
 200843.76746223 174996.24072687 119350.61966636 157534.0752352
 143718.99957159 175042.4078751  166188.63575395 235734.17075221
 125994.60397816 159709.80553986 134823.62778554 166571.7191623
 116869.16308916 129166.74872528 110296.56575485 168205.52793082
 183565.90087887  61880.87516565 160331.00762739 168560.17213849
 168445.34950738 136449.34288048  62709.4236068  136075.99123954
 105242.40644294 136738.62947875 109915.50044203 190324.16896715
 198990.44807086  63274.58682001 239109.56411331 204205.59020516
 151366.68509905 123372.81054131 103982.03155795 133329.52114306
 153596.97257509 118060.35998941 200523.81069059 151935.15191611
 168183.40198577 242856.08844843 172251.42937501 126025.81707379
 160385.81239429 174178.07740403 133455.86275009 154153.29355425
 144327.08050826 148132.39413263 180192.23096894 138016.42294987]
2025-06-24 09:17:56 INFO Expected Optimum FE: -5000
2025-06-24 09:17:56 INFO Unimodal AOCC mean: nan
2025-06-24 09:17:56 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:17:56 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:17:56 INFO AOCC mean: 0.0000
2025-06-24 09:17:56 INFO Weighed AOCC mean: nan
2025-06-24 09:17:56 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:18:41 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:18:41 INFO FeHistory: [213671.67743253  64780.57109463 177486.42730194 ...  -4399.89997451
  -4399.89998998  -4399.8999862 ]
2025-06-24 09:18:41 INFO Expected Optimum FE: -5000
2025-06-24 09:18:41 INFO Unimodal AOCC mean: nan
2025-06-24 09:18:41 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:18:41 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:18:41 INFO AOCC mean: 0.0000
2025-06-24 09:18:41 INFO Weighed AOCC mean: nan
2025-06-24 09:18:41 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:19:32 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:19:32 INFO FeHistory: [108791.38659112 145494.57490234 174091.04600644 ...  -2631.51866986
  -3471.81624397  -3548.48354709]
2025-06-24 09:19:32 INFO Expected Optimum FE: -5000
2025-06-24 09:19:32 INFO Unimodal AOCC mean: nan
2025-06-24 09:19:32 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:19:32 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:19:32 INFO AOCC mean: 0.0000
2025-06-24 09:19:32 INFO Weighed AOCC mean: nan
2025-06-24 09:23:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:24:16 ERROR Can not run the algorithm
2025-06-24 09:24:16 INFO Run function 18 complete. FEHistory len: 108302, AOCC: 0.7377
2025-06-24 09:24:16 INFO FeHistory: [ 91055.27095566 167092.94287988 105171.65683226 ...  12109.82163584
  29584.03301017  10731.06381777]
2025-06-24 09:24:16 INFO Expected Optimum FE: -5000
2025-06-24 09:24:16 INFO Good algorithm:
Algorithm Name: ArchDE_with_LocalPerturbation
import numpy as np
import random

# Name: ArchDE_with_LocalPerturbation
# Description: An adaptive Differential Evolution algorithm utilizing an external archive with focused local search and perturbation to escape local optima in complex multimodal landscapes.
# Code:
class ArchDE_with_LocalPerturbation:
    def __init__(self, budget: int, dim: int, lower_bounds: list[float], upper_bounds: list[float]):
        self.budget = int(budget)
        self.dim = int(dim)
        self.lower_bounds = np.array(lower_bounds, dtype=float)
        self.upper_bounds = np.array(upper_bounds, dtype=float)

        self.eval_count = 0
        self.best_solution_overall = None
        self.best_fitness_overall = float('inf')

        self.population_size = 10 * self.dim
        self.population = None
        self.fitness = None
        self.F = 0.5  # Mutation factor
        self.Cr = 0.7 # Crossover rate

        self.archive = []
        self.archive_size = 100

        self.min_population_size = 5 * self.dim
        self.max_population_size = 20 * self.dim
        self.population_adaptation_rate = 0.1
        self.stagnation_counter = 0
        self.stagnation_threshold = 5000  # Number of evaluations without improvement before restart
        self.perturbation_probability = 0.1 # Probability of applying local perturbation
        self.local_search_radius = 0.05 * (self.upper_bounds - self.lower_bounds) # Define local search range as a fraction of the search space.

    def optimize(self, objective_function: callable, acceptance_threshold: float = 1e-8) -> tuple:
        self.eval_count = 0

        # Initialize population
        self.population = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size, self.dim))
        self.fitness = objective_function(self.population)
        self.eval_count += self.population_size

        self.best_solution_overall = self.population[np.argmin(self.fitness)]
        self.best_fitness_overall = np.min(self.fitness)

        self.stagnation_counter = 0 # Reset Stagnation counter


        while self.eval_count < self.budget:
            # Generate offspring using an enhanced DE mutation strategy
            offspring = self.generate_offspring(objective_function)
            offspring_fitness = objective_function(offspring)
            self.eval_count += len(offspring)

             # Update archive
            self.update_archive(offspring, offspring_fitness)

            # Selection: Replace parents with better offspring
            for i in range(self.population_size):
                if offspring_fitness[i] < self.fitness[i]:
                    self.population[i] = offspring[i]
                    self.fitness[i] = offspring_fitness[i]

            #Update best solution
            best_index = np.argmin(self.fitness)
            if self.fitness[best_index] < self.best_fitness_overall:
                self.best_solution_overall = self.population[best_index]
                self.best_fitness_overall = self.fitness[best_index]
                self.stagnation_counter = 0 # Reset if improvement occurs

            else:
                 self.stagnation_counter += len(offspring)

            # Adaptive population size adjustment
            self.adjust_population_size()


            # Stagnation check and restart mechanism
            if self.stagnation_counter > self.stagnation_threshold:
                self.restart_population(objective_function)
                self.stagnation_counter = 0


        optimization_info = {
            'function_evaluations_used': self.eval_count,
            'final_best_fitness': self.best_fitness_overall,
            'population_size': self.population_size
        }
        return self.best_solution_overall, self.best_fitness_overall, optimization_info



    def generate_offspring(self, objective_function):
        offspring = np.zeros((self.population_size, self.dim))

        for i in range(self.population_size):
            # Mutation: "DE/current-to-best/1" with archive influence
            if self.archive and random.random() < 0.5:  # Utilize the archive probabilistically
                pbest = self.archive[random.randint(0, len(self.archive) - 1)][0] # Select a random member of the archive
                 # Local Search/Perturbation around a promising archive member
                if random.random() < self.perturbation_probability:
                     # Perturb pbest by adding a small random vector
                    perturbation = np.random.uniform(-self.local_search_radius, self.local_search_radius, size=self.dim)
                    pbest = np.clip(pbest + perturbation, self.lower_bounds, self.upper_bounds)

            else:
                pbest = self.population[np.argmin(self.fitness)] #Fall back to best in current population
            
            indices = list(range(self.population_size))
            indices.remove(i) # Ensure distinct indices
            a, b = random.sample(indices, 2) # Select two unique indices

            mutant = self.population[i] + self.F * (pbest - self.population[i] + self.population[a] - self.population[b])

            # Crossover: Binomial crossover
            for j in range(self.dim):
                if random.random() > self.Cr: # Perform binomial crossover
                    mutant[j] = self.population[i][j]  # Keep parent's gene

            offspring[i] = np.clip(mutant, self.lower_bounds, self.upper_bounds)  # Boundary handling

        return offspring


    def update_archive(self, offspring, offspring_fitness):
        for i in range(len(offspring)):
            if len(self.archive) < self.archive_size:
                self.archive.append((offspring[i], offspring_fitness[i]))
            else:
                # Prioritize diversity and quality in archive replacement
                worst_index = np.argmax([f for _, f in self.archive]) # Find worst fitness in archive
                if offspring_fitness[i] < self.archive[worst_index][1] or len(self.archive) < self.archive_size * 0.8:
                    self.archive[worst_index] = (offspring[i], offspring_fitness[i])




    def adjust_population_size(self):
        if random.random() < self.population_adaptation_rate: # Control adaptation frequency
            if self.stagnation_counter > self.stagnation_threshold / 2: # Stagnation suggests too small, increase pop
                self.population_size = min(int(self.population_size * 1.1), self.max_population_size)
            else: # Otherwise may reduce population to encourage convergence
                self.population_size = max(int(self.population_size * 0.9), self.min_population_size)
        self.population_size = int(self.population_size) # Ensure population size remains an integer.



    def restart_population(self, objective_function):
        # Option 1: Re-initialize entire population
        self.population = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size, self.dim))
        self.fitness = objective_function(self.population)
        self.eval_count += self.population_size
        best_index = np.argmin(self.fitness)
        if self.fitness[best_index] < self.best_fitness_overall:
             self.best_solution_overall = self.population[best_index]
             self.best_fitness_overall = self.fitness[best_index]

        # Option 2: Keep best solution and re-initialize the rest (exploitation of best)
        # num_reinitialized = int(0.8 * self.population_size)  # Re-initialize 80% of the pop.
        # self.population[num_reinitialized:] = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size - num_reinitialized, self.dim))
        # self.fitness[num_reinitialized:] = objective_function(self.population[num_reinitialized:])
        # self.eval_count += (self.population_size - num_reinitialized) # Update evaluation count
2025-06-24 09:24:16 INFO Unimodal AOCC mean: nan
2025-06-24 09:24:16 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:24:16 INFO Multimodal (multiple components) AOCC mean: 0.7377
2025-06-24 09:24:16 INFO AOCC mean: 0.7377
2025-06-24 09:24:16 INFO Weighed AOCC mean: nan
2025-06-24 09:26:10 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:26:10 ERROR Can not run the algorithm
2025-06-24 09:26:11 INFO Run function 18 complete. FEHistory len: 100, AOCC: 0.0000
2025-06-24 09:26:11 INFO FeHistory: [ 91769.07553022 115032.57232794 145634.50852121 170181.96375174
  81682.8292383  178771.14611629 100455.24799815 172239.72875815
 131813.53221026 168484.10379401 138317.74316001 229848.84037724
 190178.60703065 126011.53425332 222595.91216426 166653.74215066
 129983.41673349 143800.5984154  152057.02189137 169574.06231055
 236150.99728384 193809.41867353 206866.74471618 128021.87752618
 130843.76131277  93290.50445612 159355.58693132 165856.42391657
 191854.95252657 128468.36938736 178964.18484664 200055.82389907
 103983.80730604 243516.23163434 236073.47255407 116600.46558669
 106894.90795156 123928.93100547 114714.72488714 143268.92928479
 181172.04495604 170856.58306657 149073.76395664 134940.15104995
 133325.98937693 147044.79864568  98181.37756368 142829.86215278
 167569.05717848 248443.6356277  166689.65627891 143043.15806916
 139985.5618952  141710.14428316 213747.07443411 113234.58067494
 105329.78513004 280818.15614338 169845.46704519  80815.36773549
 111792.83175571 166533.94947213 101735.3011063  175842.33715811
 142570.77850782  90510.84291426 201151.92033448 177221.58864129
 141714.55953653 147950.18491846 161636.62997983 120752.51222217
 146241.34762584 181741.94089719  80768.38958175 169278.89819718
 125311.51515667 162504.4780368  131763.84661002 154997.61268654
 173253.77237438 136808.28561997 105090.93967997 112091.32055064
 195498.86144439  93912.3710975  177660.0051019  142506.06343449
 128591.61286365 101731.73736506 119859.76158358 116094.56300398
 133846.63237378 176579.68363542 205308.19431599 227591.62250705
 169863.53593217  75199.81504837 137924.60679313 116094.54005642]
2025-06-24 09:26:11 INFO Expected Optimum FE: -5000
2025-06-24 09:26:11 INFO Unimodal AOCC mean: nan
2025-06-24 09:26:11 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:26:11 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:26:11 INFO AOCC mean: 0.0000
2025-06-24 09:26:11 INFO Weighed AOCC mean: nan
2025-06-24 09:26:11 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:26:58 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:26:58 INFO FeHistory: [157497.71333829 164130.45491424 106876.77339699 ...  80654.41487124
  80654.41487121  80654.4148712 ]
2025-06-24 09:26:58 INFO Expected Optimum FE: -5000
2025-06-24 09:26:58 INFO Unimodal AOCC mean: nan
2025-06-24 09:26:58 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:26:58 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:26:58 INFO AOCC mean: 0.0000
2025-06-24 09:26:58 INFO Weighed AOCC mean: nan
