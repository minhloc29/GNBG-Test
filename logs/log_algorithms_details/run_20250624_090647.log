2025-06-24 09:06:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:06:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:06:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:06:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:06:48 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:07:30 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:07:30 INFO FeHistory: [169828.83886748 145926.08010096 136959.82299949 ...  -4317.69363109
  -4317.69363109  -4317.69363109]
2025-06-24 09:07:30 INFO Expected Optimum FE: -5000
2025-06-24 09:07:30 INFO Unimodal AOCC mean: nan
2025-06-24 09:07:30 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:07:30 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:07:30 INFO AOCC mean: 0.0000
2025-06-24 09:07:30 INFO Weighed AOCC mean: nan
2025-06-24 09:07:30 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:07:31 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:07:31 INFO FeHistory: [101347.56019971 103379.02215534 175576.70734855 ...  -4419.89999963
  -4419.89999973  -4419.89999989]
2025-06-24 09:07:31 INFO Expected Optimum FE: -5000
2025-06-24 09:07:31 INFO Unimodal AOCC mean: nan
2025-06-24 09:07:31 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:07:31 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:07:31 INFO AOCC mean: 0.0000
2025-06-24 09:07:31 INFO Weighed AOCC mean: nan
2025-06-24 09:07:31 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:07:31 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:07:31 INFO FeHistory: [143429.74891074 119893.07059052 141765.0128448  ...  -4317.9
  -4317.9         -4317.9       ]
2025-06-24 09:07:31 INFO Expected Optimum FE: -5000
2025-06-24 09:07:31 INFO Unimodal AOCC mean: nan
2025-06-24 09:07:31 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:07:31 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:07:31 INFO AOCC mean: 0.0000
2025-06-24 09:07:31 INFO Weighed AOCC mean: nan
2025-06-24 09:07:31 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:07:33 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:07:33 INFO FeHistory: [174702.04814823 126672.57555637 176509.54811409 ...  -4316.00650849
  -4316.82852999  -4315.44733947]
2025-06-24 09:07:33 INFO Expected Optimum FE: -5000
2025-06-24 09:07:33 INFO Unimodal AOCC mean: nan
2025-06-24 09:07:33 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:07:33 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:07:33 INFO AOCC mean: 0.0000
2025-06-24 09:07:33 INFO Weighed AOCC mean: nan
2025-06-24 09:07:33 INFO --- GNBG Problem Parameters for f18 ---
  Dimension: 30, MaxEvals: 1000000
  Search Bounds: [-100, 100]
  Number of Components: 5
  Known Optimum Value: -5000.000000
  Lambda (Curvature): [1 1 1 1 1]
  Mu (Asymmetry/Depth): [0.22159228 0.42314776 0.4901829  0.25862884 0.37043014 0.37440768
 0.26098797 0.491006   0.27569772 0.45404864]
----------------------------------------
2025-06-24 09:08:13 ERROR Can not run the algorithm
2025-06-24 09:08:13 INFO Run function 18 complete. FEHistory len: 148981, AOCC: 0.0000
2025-06-24 09:08:13 INFO FeHistory: [177320.36767053 176847.33266874 177320.36767053 ...  75174.35684406
  79254.06475005  75174.35684406]
2025-06-24 09:08:13 INFO Expected Optimum FE: -5000
2025-06-24 09:08:13 INFO Unimodal AOCC mean: nan
2025-06-24 09:08:13 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:08:13 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:08:13 INFO AOCC mean: 0.0000
2025-06-24 09:08:13 INFO Weighed AOCC mean: nan
2025-06-24 09:08:14 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.2983
2025-06-24 09:08:14 INFO FeHistory: [127036.40338999 171799.04763675 123068.75739073 ...  -4999.99999908
  -4999.99999936  -4999.99999832]
2025-06-24 09:08:14 INFO Expected Optimum FE: -5000
2025-06-24 09:08:14 INFO Good algorithm:
Algorithm Name: EnhancedArchiveGuidedDE
import numpy as np
import random
class EnhancedArchiveGuidedDE:
    def __init__(self, budget: int, dim: int, lower_bounds: list[float], upper_bounds: list[float]):
        self.budget = int(budget)
        self.dim = int(dim)
        self.lower_bounds = np.array(lower_bounds, dtype=float)
        self.upper_bounds = np.array(upper_bounds, dtype=float)

        self.eval_count = 0
        self.best_solution_overall = None
        self.best_fitness_overall = float('inf')

        self.population_size = 10 * self.dim  # common heuristic
        self.archive_size = 100
        self.archive = []
        self.population = None
        self.F_scale = 0.5 #initial scaling factor


    def optimize(self, objective_function: callable, acceptance_threshold: float = 1e-8) -> tuple:
        self.eval_count = 0
        self.population = np.random.uniform(self.lower_bounds, self.upper_bounds, size=(self.population_size, self.dim))
        fitness = objective_function(self.population)
        self.eval_count += self.population_size

        self.best_solution_overall = self.population[np.argmin(fitness)]
        self.best_fitness_overall = np.min(fitness)

        while self.eval_count < self.budget:
            offspring = self.generate_offspring(self.population, fitness)
            offspring_fitness = objective_function(offspring)
            self.eval_count += len(offspring)

            # Update archive
            self.update_archive(offspring, offspring_fitness)

            # Select best solutions for next generation
            combined_population = np.concatenate((self.population, offspring))
            combined_fitness = np.concatenate((fitness, offspring_fitness))
            indices = np.argsort(combined_fitness)
            self.population = combined_population[indices[:self.population_size]]
            fitness = combined_fitness[indices[:self.population_size]]

            #Update best solution
            self.best_solution_overall = self.population[np.argmin(fitness)]
            self.best_fitness_overall = np.min(fitness)


        optimization_info = {
            'function_evaluations_used': self.eval_count,
            'final_best_fitness': self.best_fitness_overall,
            'archive_size': len(self.archive)
        }
        return self.best_solution_overall, self.best_fitness_overall, optimization_info

    def generate_offspring(self, population, fitness):
        offspring = np.zeros((self.population_size, self.dim))
        #Adaptive scaling factor
        self.F_scale = 0.5 + 0.3*np.random.rand() #scale factor with slight variation

        for i in range(self.population_size):
            # Select pbest from archive (if available)
            if self.archive:
                pbest_index = np.random.choice(len(self.archive))
                pbest = self.archive[pbest_index][0]
            else:
                pbest = population[np.argmin(fitness)]

            a, b, c = random.sample(range(self.population_size), 3)
            while a == i or b == i or c == i:
                a, b, c = random.sample(range(self.population_size), 3)

            offspring[i] = population[i] + self.F_scale * (pbest - population[i] + population[a] - population[b])
            offspring[i] = np.clip(offspring[i], self.lower_bounds, self.upper_bounds) #Boundary handling

        return offspring

    def update_archive(self, offspring, offspring_fitness):
        for i in range(len(offspring)):
            if len(self.archive) < self.archive_size:
                self.archive.append((offspring[i], offspring_fitness[i]))
            else:
                #Prioritize diversity in archive
                worst_index = np.argmax([f for _, f in self.archive])
                if offspring_fitness[i] < self.archive[worst_index][1] or len(self.archive) < self.archive_size * 0.8 :
                    self.archive[worst_index] = (offspring[i], offspring_fitness[i])
2025-06-24 09:08:14 INFO Unimodal AOCC mean: nan
2025-06-24 09:08:14 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:08:14 INFO Multimodal (multiple components) AOCC mean: 0.2983
2025-06-24 09:08:14 INFO AOCC mean: 0.2983
2025-06-24 09:08:14 INFO Weighed AOCC mean: nan
2025-06-24 09:08:14 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:08:14 INFO FeHistory: [145202.83782113 183623.16708477 121237.49363303 ...   -927.86675024
   -927.86675024   -927.86675024]
2025-06-24 09:08:14 INFO Expected Optimum FE: -5000
2025-06-24 09:08:14 INFO Unimodal AOCC mean: nan
2025-06-24 09:08:14 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:08:14 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:08:14 INFO AOCC mean: 0.0000
2025-06-24 09:08:14 INFO Weighed AOCC mean: nan
2025-06-24 09:09:05 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:09:05 INFO FeHistory: [152144.51628937 352227.33209746 141662.71141179 ...  -4317.9
  -4317.9         -4317.9       ]
2025-06-24 09:09:05 INFO Expected Optimum FE: -5000
2025-06-24 09:09:05 INFO Unimodal AOCC mean: nan
2025-06-24 09:09:05 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:09:05 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:09:05 INFO AOCC mean: 0.0000
2025-06-24 09:09:05 INFO Weighed AOCC mean: nan
2025-06-24 09:10:57 INFO Run function 18 complete. FEHistory len: 150000, AOCC: 0.0000
2025-06-24 09:10:57 INFO FeHistory: [246515.32219042 247074.18522706 174442.88434005 ...  -4470.4
  -4470.4         -4470.4       ]
2025-06-24 09:10:57 INFO Expected Optimum FE: -5000
2025-06-24 09:10:57 INFO Unimodal AOCC mean: nan
2025-06-24 09:10:57 INFO Multimodal (single component) AOCC mean: nan
2025-06-24 09:10:57 INFO Multimodal (multiple components) AOCC mean: 0.0000
2025-06-24 09:10:57 INFO AOCC mean: 0.0000
2025-06-24 09:10:57 INFO Weighed AOCC mean: nan
